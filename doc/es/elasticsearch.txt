
CentOS8.4 安装ES7.13.2

1.安装Java
rpm -qa|grep java
卸载已安装的jdk
rpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.242.b08-0.el8_1.x86_64

验证一下是还有jdk
rpm -qa|grep java
java -version


sudo yum search java-11
sudo yum install java-11-openjdk.x86_64 -y

2.安装ES7.13.2
cd /usr/local
mkdir elastic7_13_2
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.13.2-x86_64.rpm
rpm -ivh elasticsearch-7.13.2-x86_64.rpm


修改配置
Elasticsearch 数据存储在 /var/lib/elasticsearch目录，配置文件在/etc/elasticsearch
cd /etc/elasticsearch/
vi elasticsearch.yml
修改yml文件 开启远程访问连接 开启账号密码登录
node.name: node-1
cluster.initial_master_nodes: ["node-1"]
network.host: 0.0.0.0 
http.port: 9200 （端口）

http.cors.enabled: true
http.cors.allow-origin: "*"
http.cors.allow-headers: Authorization
xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true



cd jvm.options.d/
touch song.options
vi song.options
填入
## The heap size is automatically configured by Elasticsearch
## based on the available memory in your system and the roles
## each node is configured to fulfill. If specifying heap is
## required, it should be done through a file in jvm.options.d,
## and the min and max should be set to the same value. For
## example, to set the heap to 4 GB, create a new file in the
## jvm.options.d directory containing these lines:
##
-Xms768m
-Xmx768m

3.设置开机启动
sudo systemctl daemon-reload      # 重新加载systemd程序的配置文件
sudo systemctl enable elasticsearch.service     # 设置开机自启动
sudo systemctl disable elasticsearch.service    # 删除开机自启动
sudo systemctl start elasticsearch.service     # 启动服务
sudo systemctl restart elasticsearch # 重启服务



使用elasticsearch-setup-passwords interactive命令生成用户密码 （ rpm -qal |grep elasticsearch查找es安装路径）
/usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive

测试访问地址
curl -X GET "localhost:9200/"


防火墙开启9200端口（在新开的elasticsearch域）
sudo firewall-cmd --new-zone=elasticsearch --permanent
sudo firewall-cmd --reload
sudo firewall-cmd --zone=elasticsearch --add-source=192.168.0.106/32 --permanent //只允许远程ip 192.168.0.106访问9200端口
sudo firewall-cmd --zone=elasticsearch --add-port=9200/tcp --permanent
sudo firewall-cmd --reload


查看防火墙某个端口是否开放
firewall-cmd --query-port=9200/tcp




防火墙开启5601端口（公共域）
sudo firewall-cmd --zone=public --add-port=5601/tcp --permanent
sudo firewall-cmd --reload
 
firewall-cmd --query-port=5601/tcp



4.删除ES7.13.2
sudo systemctl stop elasticsearch.service
sudo yum remove elasticsearch 或 rpm -e elasticsearch 删除es


安装Kibana 7.13.2
1.下载Kibana
cd /usr/local/elastic7_13_2
wget https://artifacts.elastic.co/downloads/kibana/kibana-7.13.2-x86_64.rpm

2.rpm包下载完成后直接执行如下：
rpm -ivh kibana-7.13.2-x86_64.rpm

3.修改配置文件
vi /etc/kibana/kibana.yml
# 找到server.host: 这行，修改如下：
server.host: "0.0.0.0"
# 找到elasticsearch.hosts: 这行，修改如下：
elasticsearch.hosts: ["http://localhost:9200"] # 此处ip地址为服务器内网IP地址。端口为es端口
elasticsearch.username: "kibana_system"
elasticsearch.password: "123456"

# 找到i18n.locale:这行，修改如下：
i18n.locale: "zh-CN"  #此处是修改为中文

4.设置开机启动
sudo systemctl daemon-reload      # 重新加载systemd程序的配置文件
sudo systemctl enable kibana.service     # 设置开机自启动
sudo systemctl start kibana.service     # 启动服务
sudo systemctl restart kibana # 重启服务

防火墙开启5601端口（公共域）
sudo firewall-cmd --zone=public --add-port=5601/tcp --permanent
sudo firewall-cmd --reload

5.删除kibana7.13.2
sudo systemctl disable kibana.service 删除开机启动
sudo systemctl stop kibana.service
sudo yum remove kibana 或 rpm -e kibana 删除kibana




安装 nginx
yum install nginx
sudo systemctl enable nginx
sudo systemctl start nginx

firewall-cmd --query-port=80/tcp
防火墙开启80端口（公共域）
sudo firewall-cmd --zone=public --add-port=80/tcp --permanent
sudo firewall-cmd --reload

安装Mysql 8
yum install mysql-server -y
 
mysql --version

sudo systemctl daemon-reload      # 重新加载systemd程序的配置文件
sudo systemctl enable mysqld.service     # 设置开机自启动
sudo systemctl start mysqld.service     # 启动服务
sudo systemctl restart mysqld 或 service mysql restart # 重启服务

要检查MySQL服务器是否正在运行：
sudo systemctl status mysqld



修改配置
vi /etc/my.cnf.d/mysql-server.cnf
添加
[mysqld]
port=3306
bind-address=0.0.0.0

innodb_buffer_pool_size=512M ->128M InnoDB引擎缓冲区占了大头，首要就是拿它开刀
#query_cache_size=100M          ->8M 查询缓存
#tmp_table_size=102M                ->16M 临时表大小
key_buffer_size=256M                ->16M
innodb_buffer_pool_chunk_size=256M
sql_mode = STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION -- 执行sql:select @@global.sql_mode可以查处理


1.设置 root 密码
mysql -u root -p
输入密码
无密码按回车
mysql> use mysql;
 
mysql> ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '123456';
mysql> flush privileges;
mysql> exit;

2.开启远程
mysql -u root -p
输入密码

mysql> use mysql;
mysql> select user,host from user;

mysql> update user set host='%' where user='root';
mysql> flush privileges;
 
防火墙开启3306端口（公共域）
sudo firewall-cmd --zone=public --add-port=3306/tcp --permanent
sudo firewall-cmd --reload
 
3.查看设置
mysql -u root -p
输入密码

mysql> use mysql;
mysql> show variables like 'innodb_buffer_pool%';


部署文件

防火墙开启22端口（公共域）
sudo firewall-cmd --zone=public --add-port=22/tcp --permanent
sudo firewall-cmd --reload

firewall-cmd --query-port=22/tcp

sftp root@211.149.133.167 sucjsd8685
cd  /usr/www/client
从本地上传文件夹：put -r D:/GitRepository/KardGin/src/client/html/webkard/builds/*


cd /etc/nginx/
vi nginx.conf

  server_name  www.upzsq.com;
  root         /usr/www/client;
  index home.html home.htm;


  location ~* /api/(.*){
    proxy_pass http://localhost:20191;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection keep-alive;
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }




1、打包；
在VS /src/client文件夹下，执行下列命令
SET CGO_ENABLED=0
SET GOOS=linux
SET GOARCH=amd64
go build  -o "webkard" .\web\startup.go

还原环境
SET CGO_ENABL
SET GOOS=windows
SET GOARCH=amd64
go build  -o "webkard.exe"  .\web\startup.go

webkard 上传到CentOS

chmod 777 webkard
窗口运行：./webkard
后台运行：nohup ./webkard &

webkard 进程号2123

查看后台运行的进程：jobs -l
终止进程： kill -9  进程号











============================================================================docker=========================================================================================

docker network create elastic
docker pull docker.elastic.co/elasticsearch/elasticsearch:7.13.2
docker pull docker.elastic.co/kibana/kibana:7.13.2

docker run --name es01-test --net elastic -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.13.2
docker run --name kib01-test --net elastic -p 5601:5601 -e "ELASTICSEARCH_HOSTS=http://es01-test:9200" docker.elastic.co/kibana/kibana:7.13.2

http://localhost:9200/
=========elasticsearch=============>

cluster.name: "docker-cluster"
network.host: 0.0.0.0
http.cors.enabled: true
http.cors.allow-origin: "*"
http.cors.allow-headers: Authorization
xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true

rpm -qa|grep wget
yum install -y wget
mkdir -m 777 song_download 
wget -P /song_download  https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.13.2/elasticsearch-analysis-ik-7.13.2.zip

cd /plugins/ && mkdir -m 777 ik
cd ..

unzip /song_download/elasticsearch-analysis-ik-7.13.2.zip -d plugins/ik

--or--
elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.13.2/elasticsearch-analysis-ik-7.13.2.zip
 


http://localhost:5601/
=========kibana=============

server.host: "0"
elasticsearch.hosts: [ "http://elasticsearch:9200" ]
monitoring.ui.container.elasticsearch.enabled: true
elasticsearch.username: "kibana_system"
elasticsearch.password: "123456"
i18n.locale: "zh-CN"


测试分词器
 
GET _analyze
{
  "analyzer": "standard",
  "text": "this is a test"
}

GET /_analyze 
{
"analyzer": "ik_max_word",
"text": "且听风吟" 
}



POST /subtitles_20060102/_doc
{
    "settings": {
        "index": {
            "number_of_shards": "1",
            "number_of_replicas": "0"
        }
    },
    "mappings": {
        "properties": {
            "title": {
                "type": "text",
                "fields": {
                    "keyword": {
                        "type": "keyword"
                    }
                }
            },
            "subtitle": {
                "type": "text",
                "fields": {
                    "keyword": {
                        "type": "keyword"
                    }
                }
            },
            "texts": {
                "type": "text",
                "fields": {
                    "keyword": {
                        "type": "keyword"
                    }
                }
            },
            "start_at": {
                "type":"keyword"
            },
            "lan": {
                "type": "keyword"
            }
        }
    }
}



PUT /subtitles/
{
    "settings": {
        "index": {
            "number_of_shards": "3",
            "number_of_replicas": "0"
        }
    },
    "mappings": {
        "properties": {
            "name": {
                "type": "keyword",
                "analyzer": "whitespace" #指定分词器
            },
            "text": {
                "type": "keyword"
            },
            "age": {
                "type": "integer"
            },
            "date": {
                "type": "date",
                "format": "yyyy-MM-dd HH:mm:ss || yyyy-MM-dd || epoch_millis"
            }
        }
    }
}

GET /subtitles_20060102/_doc/_search
{
  "query": {
    "bool":{
      "should":[
            {
              "match": {
                "title":"女"
              }
            }
        ]

    }
  }
}


GET /subtitles_20060102/_doc/_search?scroll=10m
{
  "query": {
    "bool":{
      "should":[
            {
              "wildcard": {
                "title":"*晨间剧*"
              }
            },
            {
              "wildcard": {
                "subtitle":"*宿の*"
              }
            },
            {
              "wildcard": {
                "texts":"*宿の*"
              }
            }
        ]

    }
  },
  "_source": ["path_id","title","subtitle","texts","lan"],
  "highlight": {
    "fields": {
      "title": {"force_source" : true},
      "subtitle": {"force_source" : true},
      "texts": {"force_source" : true}
    }
  },
  "sort" : ["_doc"], 
  "size": 20
}

POST /_search/scroll
{
    "scroll": "2m", 
    "scroll_id" : "FGluY2x1ZGVfY29udGV4dF91dWlkDXF1ZXJ5QW5kRmV0Y2gBFnB6VXB4OV9WUjZpSlBZRlhUZTZ4amcAAAAAAAAKMxY5b2U4TWRHbFRaS00xcVFPR2VGTDJn"
}

DELETE /_search/scroll
{
    "scroll_id" : "FGluY2x1ZGVfY29udGV4dF91dWlkDXF1ZXJ5QW5kRmV0Y2gBFnB6VXB4OV9WUjZpSlBZRlhUZTZ4amcAAAAAAAAKMxY5b2U4TWRHbFRaS00xcVFPR2VGTDJn"
}




GET /subtitles2_20060102/_doc/_search?scroll=10m
{
  "query": {
    "bool":{
      "should":[
            {
              "match_phrase": {
                "title":"晨间剧"
              }
            },
            {
              "match_phrase": {
                "subtitle":"宿"
              }
            },
            {
              "match_phrase": {
                "texts":"宿の"
              }
            }
        ]

    }
  },
  "_source": ["path_id","title","subtitle","texts","lan"],
  "highlight": {
    "fields": {
      "title": {"force_source" : true},
      "subtitle": {"force_source" : true},
      "texts": {"force_source" : true}
    }
  },
  "sort" : ["_doc"], 
  "size": 20
}

GET /subtitles_20211101/_doc/_search
{
  "query": {
    "multi_match": {
      "query": "中国",
      "fields": ["title","subtitle","texts"],
      "type": "phrase"
    }
  },
  "_source": ["path_id","title","subtitle","texts","lan"],
  "highlight": {
    "fields": {
      "title": {"force_source" : true},
      "subtitle": {"force_source" : true},
      "texts": {"force_source" : true}
    }
  },
  "sort" : ["_doc"], 
  "size": 20
}


GET /subtitles_20211101/_doc/_search
{
 "query": {
    "bool": {
      "should": [
        {
          "term": {
            "part_id":1
          }
        },{
          "term":{
            "part_id":2
          }
        }
      ]
    }
  },
  "sort": [
    {
      "path_id": {
        "order": "desc"
      }
    }
  ]
}

GET /subtitles_20211101/_doc/_search
{
  "query": {
    "term": {
      "part_id": 1
    }
  },
  "sort": [
    {
      "path_id": {
        "order": "desc"
      }
    }
  ]
}